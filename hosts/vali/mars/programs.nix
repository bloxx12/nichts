{
  inputs,
  pkgs,
  ...
}: let
  fenix = inputs.fenix.packages.${pkgs.system};
  nixpkgs-wayland = inputs.nixpkgs-wayland.packages.${pkgs.system};
in {
  environment.systemPackages = with pkgs; [
    abaddon
    alejandra
    alsa-utils
    android-tools
    asciinema
    bibata-cursors
    blanket
    cmake
    difftastic
    dig
    easyeffects
    element-desktop
    evince
    eza
    fastfetch
    feh
    (fenix.complete.withComponents [
      "cargo"
      "clippy"
      "rust-src"
      "rustc"
      "rustfmt"
    ])
    ffmpeg-full
    fftw
    grimblast
    gcc
    gdb
    gnumake
    grc
    grimblast
    git
    helvum
    heroic
    httpie
    i3lock
    imagemagick
    img2pdf
    imv
    keepassxc
    krita
    lazygit
    #librewolf
    libtool
    links2
    lutris
    mars-mips
    gnome.nautilus
    ncmpcpp
    neofetch
    neovim
    nheko
    networkmanagerapplet
    nextcloud-client
    nicotine-plus
    nil
    nitch
    nixfmt
    nixpkgs-wayland.swww
    nmap
    notesnook
    obs-studio
    obsidian
    onlyoffice-bin
    pamixer
    pavucontrol
    pdfarranger
    pfetch
    pidgin
    playerctl
    polkit
    python3
    qbittorrent
    ripgrep
    rustdesk
    scc
    scummvm
    sherlock
    signal-desktop-beta
    smartmontools
    steam
    strawberry
    teamspeak_client
    telegram-desktop
    texliveFull
    tldr
    thunderbird
    tor-browser-bundle-bin
    trash-cli
    tree
    typst
    # typstfmt does not work either
    typstyle

    typst-lsp
    unzip
    util-linux
    v4l-utils
    ventoy-full
    vlc
    weechat
    wget
    wine
    winetricks
    wireguard-tools
    wl-clipboard
    xdg-utils
    xournalpp
    yt-dlp
    zapzap
    zip
    zoxide
  ];
}
