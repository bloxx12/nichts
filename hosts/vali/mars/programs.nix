{ inputs, pkgs, ... }:
let
  fenix = inputs.fenix.packages.${pkgs.system};
  nixpkgs-wayland = inputs.nixpkgs-wayland.packages.${pkgs.system};
in {
  environment.systemPackages = with pkgs; [
    alsa-utils
    android-tools
    asciinema
    bibata-cursors
    blanket
    difftastic
    dig
    easyeffects
    element-desktop
    evince
    eza
    fastfetch
    feh
    (fenix.complete.withComponents [
      "cargo"
      "clippy"
      "rust-src"
      "rustc"
      "rustfmt"
    ])
    ffmpeg-full
    fftw
    flameshot
    grimblast
    gcc
    gdb
    gnumake
    grc
    grimblast
    git
    helvum
    heroic
    httpie
    i3lock
    imagemagick
    img2pdf
    imv
    keepassxc
    krita
    lazygit
    librewolf
    links2
    mars-mips
    ncmpcpp
    neofetch
    neovim
    networkmanagerapplet
    nextcloud-client
    nicotine-plus
    nil
    nitch
    nixpkgs-wayland.swww
    nmap
    notesnook
    obs-studio
    obsidian
    onlyoffice-bin
    pamixer
    pavucontrol
    picom
    pcmanfm
    pdfarranger
    pfetch
    pidgin
    playerctl
    polkit
    python3
    qbittorrent
    ripgrep
    rustdesk
    rofi
    scc
    scummvm
    sherlock
    signal-desktop-beta
    smartmontools
    spotube
    steam
    strawberry
    svls
    teamspeak_client
    telegram-desktop
    texliveFull
    tldr
    trilium-desktop
    thunderbird
    tor-browser-bundle-bin
    trash-cli
    tree
    unzip
    util-linux
    v4l-utils
    ventoy-full
    vlc
    weechat
    wget
    wireguard-tools
    xournalpp
    yt-dlp
    zapzap
    zathura
    zip
    zoxide
  ];
}
